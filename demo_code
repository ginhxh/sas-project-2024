#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
#include <math.h>
#include <ctype.h>
#include <unistd.h>

typedef struct{
    char name[20];
    char mot_pass[40];
    char role[40];
} user;

typedef struct{
    int id ;
    char motif[40];
    char description[250];
    char categorie[30];
    char status[30];
    time_t date;
    char prayority[30];
    char client[40];
} reclamation;

int count = 0;
int reclama = 0;
char p1[4][20] = {"ahmed", "rabar", "casa", "tata"};
char p2[4][20] = {"cat", "chat", "dog", "nana"};

void enter_rec(reclamation r[], int reclama, char client_name[]) {
    int pp1 = 0, pp2 = 0;

    printf("Bonjour, quel est le motif de votre reclamation : ");
    strcpy(r[reclama].client, client_name);

    scanf(" %[^\n]", r[reclama].motif);

    printf("Entrez une description : ");
    scanf(" %[^\n]", r[reclama].description);

    printf("Dans quelle categorie se trouve votre probleme : ");
    scanf(" %[^\n]", r[reclama].categorie);

    for (int i = 0; i < 4; i++) {
        if (strstr(r[reclama].description, p1[i]) != NULL) {
            pp1 = 1;
        }
        if (strstr(r[reclama].description, p2[i]) != NULL) {
            pp2 = 1;
        }
    }

    if (pp1 && pp2) {
        strcpy(r[reclama].prayority, "premier class");
    } else if (pp1) {
        strcpy(r[reclama].prayority, "premier class");
    } else if (pp2) {
        strcpy(r[reclama].prayority, "deuxieme class");
    } else {
        strcpy(r[reclama].prayority, "classe normale");
    }

    srand(time(0));
    r[reclama].id = rand() % 1000;

    printf("Votre reclamation a ete enregistree.\n");
}

void afichag(reclamation r[], int reclama) {
    if (reclama == 0) {
        printf("Aucune reclamation a afficher.\n");
        return;
    }

    for (int i = 0; i < reclama; i++) {
        printf("ID : %d\n", r[i].id);
        printf("Client : %s\n", r[i].client);
        printf("Motif : %s\n", r[i].motif);
        printf("Description : %s\n", r[i].description);
        printf("Categorie : %s\n", r[i].categorie);
        printf("Priorite : %s\n", r[i].prayority);
        printf("\n");
    }
}

void sign_up_user(user u[]) {
    int valide = 0;
    int att = 0;

    printf("Bonjour !\n");

    while (!valide) {
        printf("Entrez votre nom : ");
        scanf(" %[^\n]", u[count].name);
        if (strlen(u[count].name) < 3) {
            printf("Nom trop court. Doit contenir au moins 3 caracteres.\n");
            continue;
        }
        valide = 1;
        for (int i = 0; i < strlen(u[count].name); i++) {
            if (isdigit(u[count].name[i])) {
                valide = 0;
                printf("Entrez un nom valide (pas de chiffres autorises).\n");
                att++;
            }
        }
    }

    valide = 0;
    int digi = 0, alpha = 0, up = 0, low = 0, spc = 0;

    while (!valide && att < 3) {
        printf("Entrez votre mot de passe : ");
        scanf(" %[^\n]", u[count].mot_pass);

        int longer = strlen(u[count].mot_pass);
        int name = 0;
        for (int i = 0; i < longer; i++) {
            if (strstr(u[count].mot_pass, u[count].name) != NULL) name = 1;
            if (isdigit(u[count].mot_pass[i])) digi = 1;
            if (isalpha(u[count].mot_pass[i])) alpha = 1;
            if (islower(u[count].mot_pass[i])) low = 1;
            if (isupper(u[count].mot_pass[i])) up = 1;
            if (strchr("!@#$%^&*.,", u[count].mot_pass[i])) spc = 1;
        }

        if (digi == 1 && alpha == 1 && spc == 1 && up == 1 && low == 1 && longer >= 8 && !name) {
            valide = 1;
        } else {
            printf("Entrez un mot de passe valide.\n");
            att++;
            if (att > 2) {
                printf("Vous avez fait plus de 3 tentatives. Attendez 10 secondes avant d'essayer a nouveau.\n");
                sleep(10);
                return;
            }
        }
    }

    printf("Inscription complete. Votre identifiant est %s et votre mot de passe est %s.\n", u[count].name, u[count].mot_pass);
    count++;
}

void sign_in_user(user u[], reclamation r[]) {
    char name[30];
    char pass[30];
    int exist = 0;
    int attptes = 0;

    if (count == 0) {
        printf("Enregistrez-vous d'abord.\n");
        return;
    }

    while (attptes < 3 && !exist) {
        printf("Entrez votre nom d'utilisateur : ");
        scanf(" %[^\n]", name);
        printf("Entrez votre mot de passe : ");
        scanf(" %[^\n]", pass);

        for (int i = 0; i < count; i++) {
            if (strcmp(u[i].name, name) == 0 && strcmp(u[i].mot_pass, pass) != 0) {
                printf("Mot de passe incorrect.\n");
                attptes++;
            }
            if (strcmp(u[i].name, name) != 0 && strcmp(u[i].mot_pass, pass) == 0) {
                printf("Nom d'utilisateur non trouve.\n");
                attptes++;
            }
            if (strcmp(u[i].name, name) == 0 && strcmp(u[i].mot_pass, pass) == 0) {
                printf("Comment puis-je vous aider aujourd'hui ?\n");
                exist = 1;
                int x;
                while (1) {
                    printf("1 - Ajouter une reclamation\n2 - Quitter\n");
                    scanf("%d", &x);
                    switch (x) {
                        case 1:
                            enter_rec(r, reclama, u[i].name);
                            reclama++;
                            break;
                        case 2:
                            return;
                        default:
                            printf("Choix invalide. Essayez encore.\n");
                    }
                }
                break;
            }
        }
        if (attptes == 3) {
            sleep(10);
            return;
        }
    }

    if (!exist) {
        printf("Connexion echouee.\n");
    }
}

void sign_in_admin(user u[], reclamation r[]) {
    char admin_name[30] = "admin";
    char admin_password[30] = "Admin00";
    char nom[30], pass[30];
    int tentatives = 0;

    while (tentatives < 3) {
        printf("Entrez votre nom d'administrateur : ");
        scanf(" %[^\n]", nom);
        printf("Entrez votre mot de passe : ");
        scanf(" %[^\n]", pass);

        if (strcmp(nom, admin_name) == 0 && strcmp(pass, admin_password) == 0) {
            printf("Bonjour, Administrateur !\n");
            int choix;
            while (1) {
                printf("1 - Afficher toutes les reclamations\n2 - Ajouter une reclamation\n3 - Quitter\n");
                scanf("%d", &choix);

                switch (choix) {
                    case 1:
                        afichag(r, reclama);
                        break;
                    case 2:
                        enter_rec(r, reclama, admin_name);
                        reclama++;
                        break;
                    case 3:
                        return;
                    default:
                        printf("Choix invalide.\n");
                }
            }
        } else {
            printf("Identifiants incorrects. Reessayez.\n");
            tentatives++;
            if (tentatives == 3) {
                printf("Trop de tentatives echouees. Attendez 10 secondes avant de reessayer.\n");
                sleep(10);
            }
        }
    }
}

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>

int main() {
    user u[200];
    reclamation r[200];

    int chose;

    while (1) {
        printf("1 - Inscription\n2 - Connexion\n3 - Connexion Administrateur\n4 - Quitter\nEntrez votre choix : ");
        char input[20];
        fgets(input, sizeof(input), stdin);

        input[strcspn(input, "\n")] = '\0';

        if (sscanf(input, "%d", &chose) == 1 && chose >= 1 && chose <= 4) {
            switch (chose) {
                case 1:
                    sign_up_user(u);
                    break;
                case 2:
                    sign_in_user(u, r);
                    break;
                case 3:
                    sign_in_admin(u, r);
                    break;
                case 4:
                    return 0;
                default:
                    printf("Choix invalide.\n");
                    break;
            }
        } else {
            printf("Choix invalide. reessayez.\n");
        }
    }

    return 0;
}

